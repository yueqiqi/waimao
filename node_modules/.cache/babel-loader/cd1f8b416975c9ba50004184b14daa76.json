{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\src\\axios.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\src\\axios.js","mtime":1574054891912},{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//vue_app_00/src/axios.js\n// //将引入axios库单独保存一个文件中\n// //减少main.js 代码量\n// //1:引入vue实例\nimport Vue from \"vue\"; // //2:引入axios库\n// import axios from \"axios\"\n// //3:发送请求时保存session信息\n// axios.defaults.withCredentials=true\n// //4:设置请求基础路径\n// axios.defaults.baseURL=\"http://192.168.0.184:8004/\"\n// //5:将axios注册vue实例\n// Vue.prototype.$axios = axios\n// //6:在main.js 引入axios.js文件 \n\nimport axios from 'axios';\nimport qs from 'qs'; // axios配置\n\naxios.defaults.timeout = 5000; // 响应时间\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'; // 配置post请求头\n\naxios.defaults.headers.get['Content-Type'] = 'application/json;charset=UTF-8'; // 配置get请求头\n\naxios.defaults.baseURL = 'http://192.168.0.140:8002/'; // 配置接口地址\n// POST传参序列化(添加请求拦截器)\n\naxios.interceptors.request.use(function (config) {\n  // 在发送请求之前做某件事\n  if (config.method === 'post') {\n    // 这里使用qs对数据进行处理，防止后台$_POST接收不到\n    config.data = qs.stringify(config.data);\n  }\n\n  return config;\n}, function (error) {\n  console.log('错误的传参', 'fail');\n  return Promise.reject(error);\n});\nVue.prototype.$http = axios; // 定义axios的全局变量",{"version":3,"sources":["src\\axios.js"],"names":["Vue","axios","qs","defaults","timeout","headers","post","get","baseURL","interceptors","request","use","config","method","data","stringify","error","console","log","Promise","reject","prototype","$http"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,GAAP,MAAgB,KAAhB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAEA;;AACAD,MAAME,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAA8B;;AAC9BH,MAAME,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iDAA9C,C,CAAgG;;AAChGL,MAAME,QAAN,CAAeE,OAAf,CAAuBE,GAAvB,CAA2B,cAA3B,IAA6C,gCAA7C,C,CAA8E;;AAC9EN,MAAME,QAAN,CAAeK,OAAf,GAAyB,4BAAzB,C,CAAsD;AACtD;;AACAP,MAAMQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACzC;AACA,MAAIA,OAAOC,MAAP,KAAkB,MAAtB,EAA8B;AAC5B;AACAD,WAAOE,IAAP,GAAcZ,GAAGa,SAAH,CAAaH,OAAOE,IAApB,CAAd;AACD;;AACD,SAAOF,MAAP;AACD,CAPD,EAOG,UAACI,KAAD,EAAW;AACZC,UAAQC,GAAR,CAAY,OAAZ,EAAqB,MAArB;AACA,SAAOC,QAAQC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAVD;AAYAhB,IAAIqB,SAAJ,CAAcC,KAAd,GAAsBrB,KAAtB,C,CAA4B","sourceRoot":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00","sourcesContent":["//vue_app_00/src/axios.js\r\n// //将引入axios库单独保存一个文件中\r\n// //减少main.js 代码量\r\n// //1:引入vue实例\r\nimport Vue from \"vue\"\r\n// //2:引入axios库\r\n// import axios from \"axios\"\r\n// //3:发送请求时保存session信息\r\n// axios.defaults.withCredentials=true\r\n// //4:设置请求基础路径\r\n// axios.defaults.baseURL=\"http://192.168.0.184:8004/\"\r\n// //5:将axios注册vue实例\r\n// Vue.prototype.$axios = axios\r\n// //6:在main.js 引入axios.js文件 \r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\n \r\n// axios配置\r\naxios.defaults.timeout = 5000 // 响应时间\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8' // 配置post请求头\r\naxios.defaults.headers.get['Content-Type'] = 'application/json;charset=UTF-8' // 配置get请求头\r\naxios.defaults.baseURL = 'http://192.168.0.140:8002/' // 配置接口地址\r\n// POST传参序列化(添加请求拦截器)\r\naxios.interceptors.request.use((config) => {\r\n  // 在发送请求之前做某件事\r\n  if (config.method === 'post') {\r\n    // 这里使用qs对数据进行处理，防止后台$_POST接收不到\r\n    config.data = qs.stringify(config.data)\r\n  }\r\n  return config\r\n}, (error) => {\r\n  console.log('错误的传参', 'fail')\r\n  return Promise.reject(error)\r\n})\r\n \r\nVue.prototype.$http = axios // 定义axios的全局变量"]}]}