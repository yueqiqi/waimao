{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\src\\components\\waimao\\login\\reg.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\src\\components\\waimao\\login\\reg.vue","mtime":1574334465152},{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Administrator\\Desktop\\waimao\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  data: function data() {\n    var _this = this;\n\n    /**\r\n     * 验证码验证\r\n     */\n    var code = function code(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value.length != 6) {\n        callback(new Error('请输入正确的验证码'));\n      } else {\n        if (_this.reg.pwd !== '') {\n          _this.$refs.reg.validateField('code');\n        }\n\n        callback();\n      }\n    }; //  邮箱验证\n\n\n    var email = function email(rule, value, callback) {\n      if (value == \"\") {\n        callback(new Error(\"请输入邮箱\"));\n        console.log(\"请输入邮箱\");\n      } else if (value !== \"\") {\n        var reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n\n        if (!reg.test(value)) {\n          callback(new Error(\"邮箱格式不正确\"));\n          console.log(\"邮箱格式不正确\");\n        } else if (reg.test(value)) {\n          _this.dis = false;\n          console.log(_this.dis);\n          console.log(\"正确\");\n        }\n      } else {\n        callback();\n      }\n    };\n    /**\r\n     * 输入的第一次密码\r\n     */\n\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6 || value.length > 18) {\n        callback(new Error('密码长度在6~18位'));\n      } else {\n        if (_this.reg.pwd !== '') {\n          _this.$refs.reg.validateField('pwd');\n        }\n\n        callback();\n      }\n    };\n    /**\r\n     * 输入的第二次密码\r\n     */\n\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.reg.pwd) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      // 是否禁用button\n      dis: true,\n      // 是否显示弹窗\n      show: \"\",\n      reg: {\n        email: \"\",\n        pwd: \"\",\n        spwd: \"\",\n        code: ''\n      },\n      // 错误提示\n      rules: {\n        pwd: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        spwd: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: email,\n          trigger: 'blur'\n        }],\n        code: [{\n          validator: code,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    // 隐藏弹窗\n    hidden: function hidden() {\n      this.show = false;\n    },\n    //  验证邮箱\n    email: function email() {\n      this.show = true;\n      console.log('验证邮箱验证码');\n      /**\r\n       * 验证吗获取\r\n       */\n\n      this.$ajax.post('/auth/getRegCode', {\n        email: this.reg.email\n      }).then(function (response) {\n        console.log('发送验证码成功', response);\n      }, function (err) {\n        console.log(err);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //  注册\n    confirm: function confirm() {\n      // this.$router.push({  //核心语句\n      //       path:'/reg',   //跳转的路径\n      //     })\n\n      /**\r\n       * 用户填写的信息\r\n       */\n      var params = {\n        email: this.reg.email,\n        passwd: this.reg.pwd,\n        // spwd:\n        code: this.reg.code // role_id:''\n\n      };\n      console.log('用户填写的信息', params);\n      /**\r\n       * 发送ajax请求\r\n       */\n\n      var that = this;\n      this.$ajax.post('/auth/register', params).then(function (res) {\n        console.log('请求祖册成功', res);\n\n        if (res.data.code == 200) {\n          that.$router.push({\n            path: '/perfect'\n          });\n          var token = res.data.data;\n        } else {\n          alert(res.data.msg);\n        }\n      }).catch(function (err) {\n        console.log('请求失败', err);\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created: function created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted: function mounted() {},\n  beforeCreate: function beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount: function beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate: function beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated: function updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy: function beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed: function destroyed() {},\n  //生命周期 - 销毁完成\n  activated: function activated() {}\n};",{"version":3,"sources":["reg.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 注册 -->\r\n<template>\r\n<div class='bg'>\r\n  <div class=\"img\">\r\n    <div class=\"border\">       \r\n      <div class=\"login-text\">账号注册</div>\r\n      <!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!element-ui回车会导致表单提交利用 @submit.native.prevent可以阻止！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！ -->\r\n      <!-- 密码 -->\r\n      <el-form :model=\"reg\" :rules=\"rules\" ref=\"reg\" class=\"demo-ruleForm\"  @submit.native.prevent>\r\n        <!-- 填写邮箱input -->\r\n        <el-form-item prop=email>\r\n          <el-input placeholder=\"请输入邮箱\" class=\"email\" v-model=\"reg.email\"></el-input>\r\n        </el-form-item>\r\n          <button @click=\"email\" class=\"btn\" :disabled=\"dis\" :style=\"dis==true?'opacity: 0.65;':''\">发送验证信息到邮箱</button>\r\n        <el-form-item prop=\"code\">\r\n          <el-input  placeholder=\"请输入验证码\" type=\"number\" v-model=\"reg.code\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <!-- 填写密码input ------------------------------------------>\r\n        <el-form-item prop=\"pwd\">\r\n          <el-input  placeholder=\"请输入密码\" type=\"password\" v-model=\"reg.pwd\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"spwd\">\r\n          <el-input  placeholder=\"请确认密码\" type=\"password\" v-model=\"reg.spwd\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n  <!-- ------------------------------------ -->\r\n      </el-form>\r\n        <!-- 提交表单信息 -->\r\n          <button @click=\"confirm\" class=\"btn2\">确认注册</button>\r\n    </div>\r\n    <!-- 提示 -->\r\n    <div class=\"total\" v-show=\"show\">\r\n      <div>验证信息已发送到您的邮箱请前往验证</div>\r\n      <button @click=\"hidden\">确定</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\n//例如：import 《组件名称》 from '《组件路径》';\r\n\r\nexport default {\r\n//import引入的组件需要注入到对象中才能使用\r\ncomponents: {},\r\n data() {\r\n   /**\r\n    * 验证码验证\r\n    */\r\n      var code = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入验证码'));\r\n        } else if(value.length!=6){\r\n          callback(new Error('请输入正确的验证码'));\r\n        }\r\n        else{\r\n          if (this.reg.pwd !== '') {\r\n            this.$refs.reg.validateField('code');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n  //  邮箱验证\r\nvar email=(rule,value,callback)=>{\r\n  if(value==\"\"){\r\n    callback(new Error(\"请输入邮箱\"))\r\n    console.log(\"请输入邮箱\")\r\n  }else if(value!==\"\"){\r\n    var reg=/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n    if(!reg.test(value)){\r\n      callback(new Error(\"邮箱格式不正确\"))\r\n      console.log(\"邮箱格式不正确\")\r\n    }else if(reg.test(value)){\r\n      this.dis=false;\r\n    console.log(this.dis)\r\n      console.log(\"正确\")\r\n    }\r\n  }else{\r\n    callback()\r\n  }\r\n};\r\n/**\r\n * 输入的第一次密码\r\n */\r\n   var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else if(value.length<6||value.length>18){\r\n          callback(new Error('密码长度在6~18位'));\r\n        }\r\n        else{\r\n          if (this.reg.pwd !== '') {\r\n            this.$refs.reg.validateField('pwd');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n/**\r\n * 输入的第二次密码\r\n */\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.reg.pwd) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        // 是否禁用button\r\n        dis:true,\r\n        // 是否显示弹窗\r\n        show:\"\",\r\n       reg:{\r\n          email:\"\",\r\n          pwd:\"\",\r\n          spwd:\"\",\r\n          code:'',\r\n        },\r\n        // 错误提示\r\n        rules:{\r\n          pwd: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          spwd: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          email:[\r\n            { validator: email, trigger: 'blur' }\r\n          ],\r\n          code:[\r\n            { validator:code, trigger: 'blur' }\r\n          ],          \r\n        },\r\n      };\r\n    },\r\n//监听属性 类似于data概念\r\ncomputed: {},\r\n//监控data中的数据变化\r\nwatch: {},\r\n//方法集合\r\nmethods: {\r\n  // 隐藏弹窗\r\n  hidden(){\r\n    this.show=false\r\n  },\r\n//  验证邮箱\r\nemail(){\r\n  this.show=true\r\n  console.log('验证邮箱验证码')\r\n  /**\r\n   * 验证吗获取\r\n   */\r\n     this.$ajax.post('/auth/getRegCode', {email:this.reg.email}).then(\r\n        response => {\r\n          console.log('发送验证码成功',response)\r\n        },\r\n        err => {\r\n          console.log(err)\r\n        }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n},\r\n//  注册\r\nconfirm(){\r\n  // this.$router.push({  //核心语句\r\n  //       path:'/reg',   //跳转的路径\r\n  //     })\r\n\r\n      /**\r\n       * 用户填写的信息\r\n       */\r\n      var params={\r\n        email:this.reg.email,\r\n        passwd:this.reg.pwd,\r\n        // spwd:\r\n        code:this.reg.code,\r\n        // role_id:''\r\n      }\r\n      console.log('用户填写的信息',params)\r\n    /**\r\n     * 发送ajax请求\r\n     */\r\n    var that=this\r\n    this.$ajax.post('/auth/register',params).then(function(res){\r\n      console.log('请求祖册成功',res)\r\n      if(res.data.code==200){\r\n        that.$router.push({\r\n          path:'/perfect'\r\n        })\r\n          var token=res.data.data\r\n      \r\n      }else {\r\n        alert(res.data.msg)\r\n      }\r\n    }).catch(function(err){\r\n\r\n      console.log('请求失败',err)\r\n\r\n    })\r\n\r\n\r\n}\r\n},\r\n//生命周期 - 创建完成（可以访问当前this实例）\r\ncreated() {\r\n\r\n},\r\n//生命周期 - 挂载完成（可以访问DOM元素）\r\nmounted() {\r\n \r\n},\r\nbeforeCreate() {}, //生命周期 - 创建之前\r\nbeforeMount() {}, //生命周期 - 挂载之前\r\nbeforeUpdate() {}, //生命周期 - 更新之前\r\nupdated() {\r\n}, //生命周期 - 更新之后\r\nbeforeDestroy() {}, //生命周期 - 销毁之前\r\ndestroyed() {}, //生命周期 - 销毁完成\r\nactivated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\r\n}\r\n</script>\r\n<style scoped>\r\n/* @import url(); 引入公共css类 */\r\n.bg{\r\n  width:1920px;\r\n  background:url(\"./bg.png\") no-repeat;\r\n  background-size:100%;\r\n  height:1064px;\r\n}\r\n.img{\r\n  /* width:1900px; */\r\n  position:absolute;\r\n}\r\n/* 输入外框 */\r\n.border{\r\n  width:495px;height: 600px;\r\n  background:rgba(255,255,255,0.4);\r\n  border-radius:20px;\r\n  z-index:10;\r\n  position:relative;\r\n  top:290px;left:1165px;\r\n  text-align: center\r\n}\r\n.login-text{\r\n  font-size:30px;\r\nfont-family:Microsoft YaHei;\r\nfont-weight:bold;\r\ncolor:rgba(6,102,164,1);\r\n/* line-height:50px; */\r\nmargin-left:46px;\r\ntext-align: left;\r\npadding-top:38px;\r\nmargin-bottom:19px;\r\n}\r\n/* 输入框 */\r\n.el-input{\r\n  width:400px!important;height:50px!important;\r\n  margin:auto;\r\n  position:\tstatic;\r\n  display: block;\r\n}\r\n.el-input__inner {\r\n  background:rgba(255,255,255,1)!important;\r\n}\r\ninput{\r\n  border-radius: 10px!important;\r\n}\r\n/* 错误提示 */\r\n.el-form-item .el-form-item__error{\r\n  position:static!important;\r\n  text-align: center!important;\r\n}\r\n/* 登录按钮 */\r\n.btn{\r\n  width:400px;\r\nheight:50px;\r\nbackground:rgba(6,102,164,1);\r\nborder-radius:10px;\r\ntext-align: center;\r\nline-height: 50px;\r\nborder:0;\r\nfont-size:20px;\r\nfont-family:Microsoft YaHei;\r\nfont-weight:400;\r\ncolor:rgba(255,255,255,1);\r\nmargin-bottom:30px;\r\n}\r\n/* 注册 */\r\n.btn2{\r\nwidth:400px;\r\nheight:50px;\r\nbackground:rgba(6,102,164,1);\r\nborder-radius:10px;\r\ntext-align: center;\r\nline-height: 50px;\r\nborder:0;\r\nfont-size:20px;\r\nfont-family:Microsoft YaHei;\r\nfont-weight:400;\r\ncolor:rgba(255,255,255,1);\r\n}\r\n/* 提示信息 */\r\n.total{\r\n  width:280px;\r\nheight:200px;\r\nbackground:rgba(255,255,255,1);\r\nborder:1px solid rgba(217,217,217,1);\r\nborder-radius:20px;\r\ntext-align: center;\r\nfont-size:16px;\r\nfont-family:Microsoft YaHei;\r\nfont-weight:400;\r\ncolor:rgba(51,51,51,1);\r\nposition: absolute;\r\ntop:70px;left:1279px;\r\n}\r\n.total :first-child{\r\n  width:192px;height:41px;\r\n  margin:50px auto 29px;\r\n}\r\n.total button{\r\n  width:130px;\r\nheight:40px;\r\nbackground:rgba(6,102,164,1);\r\nborder-radius:10px;\r\nborder:0;\r\ntext-align: center;\r\nline-height: 40px;\r\ncolor:#fff;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\waimao\\login"}]}